<statements> ::= <statement>{0,10};
<statement> ::= <assignment> "\n" | <expression> "\n";

<assignment> ::= <directlyAssignableExpression> "=" <expression>;
<expression> ::= <postfixUnaryExpression>;

<directlyAssignableExpression> ::=
    <postfixUnaryExpression> <navigationSuffix>{0,3} |
    <simpleIdentifier> |
    <parenthesizedDirectlyAssignableExpression>;

<parenthesizedDirectlyAssignableExpression> ::= "(" <directlyAssignableExpression> ")";

<postfixUnaryExpression> ::= <primaryExpression> <postfixUnarySuffix>{0,1};

<postfixUnarySuffix> ::= <callSuffix> | <navigationSuffix>;

<callSuffix> ::= <valueArguments>{0,1} <annotatedLambda> | <valueArguments>;

<annotatedLambda> ::= "{" <statements> "}";

<valueArguments> ::= "(" <valueArgument> <furtherArguments>{0,2}  ")";
<furtherArguments> ::= "," <valueArgument>;
<valueArgument> ::= <identifierEquals>{0,1} <expression>;
<identifierEquals> ::= <simpleIdentifier> "=";

<parenthesizedExpression> ::= "(" <expression> ")";

<navigationSuffix> ::= "." <simpleIdentifier>;

<primaryExpression> ::= <parenthesizedExpression> | <simpleIdentifier> | <literalConstant> | <stringLiteral>;
<simpleIdentifier> ::= <alpha>{3,4};
<stringLiteral> ::= <alpha>{5,15};
<booleanLiteral> ::= "true" | "false";
<literalConstant> ::= "null" | <booleanLiteral> | <digit>{1,3};

<alpha>	 ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z";
<digit>  ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";

<start> ::= <statements>
